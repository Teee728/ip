package cruisey;

import java.util.Scanner;

import cruisey.command.Parser;
import cruisey.exception.CruiseyException;
import cruisey.storage.Storage;
import cruisey.task.TaskList;
import cruisey.ui.Ui;
import javafx.application.Platform;

/**
 * The Duke class represents the main class for the Duke application.
 */
public class Cruisey {
    private Storage storage;
    private TaskList tasks;
    private Ui ui;

    /**
     * Constructs a Duke object.
     *
     */
    public Cruisey() {
        ui = new Ui();
        storage = new Storage();
        try {
            tasks = new TaskList(storage.load(), ui);
            assert tasks != null : "TaskList should not be null after loading.";
        } catch (CruiseyException e) {
            ui.showLoadingError();
            tasks = new TaskList();
            assert tasks != null : "TaskList should not be null after initializing.";
        }
    }

    /**
     * Runs the Duke application.
     */
    public void run() {
        ui.showWelcomeMessage();

        Scanner scanner = new Scanner(System.in);
        Parser parser = new Parser(tasks, storage, scanner, true);

        while (parser.getRunningStatus()) {
            String input = scanner.nextLine().trim();
            parser.setCommand(input);
            try {
                parser.processCommand();
            } catch (CruiseyException e) {
                throw new RuntimeException(e);
            }

        }
        scanner.close();
        Platform.exit(); // Close the application
    }

    /**
     * The main method to start the Duke application.
     *
     * @param args Command-line arguments.
     */
    public static void main(String[] args) {
        Cruisey cruisey = new Cruisey();
        assert cruisey != null : "Duke instance should not be null after initialization.";

        cruisey.run(); //"./data/tasks.txt"
    }


    /**
     * You should have your own function to generate a response to user input.
     * Replace this stub with your completed method.
     */
    public String getResponse(String input) {
        try {
            // Initialize a new Parser
            Parser parser = new Parser(tasks, storage, new Scanner(System.in), true);

            // Set the command to be processed by the parser
            parser.setCommand(input);

            // Process the command
            parser.processCommand();

            // Return the response generated by the parser
            return parser.getResponse();
        } catch (CruiseyException e) {
            return "Uhhh, " + e.getMessage();
        }
    }
}
